@model BiscuitChief.Models.Recipe

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="RecipeHeading">
        <div class="Title">
            @ViewBag.Title
        </div>
    </div>
    
    <div class="RecipeForm">
        <div class="FormSection">
            Recipe Details
        </div>
        <ul class="FormFields">
            <li>
                @Html.LabelFor(model => model.Title)
                @Html.TextBoxFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </li>
            <li>
                @Html.LabelFor(model => model.Description)
                @Html.TextAreaFor(model => model.Description, new { @rows = 3, @cols = "", style="width: 600px; max-width: 100%;" })
                @Html.ValidationMessageFor(model => model.Description)
            </li>
            <li>
                <label>Cateogories:</label>
                @for (int i = 0; i < Model.CategoryList.Count; i++)
                {
                    <span style="padding-right:15px; white-space:nowrap;">
                        @Html.HiddenFor(item => Model.CategoryList[i].CategoryCode)
                        @Html.HiddenFor(item => Model.CategoryList[i].CategoryName)
                        @Model.CategoryList[i].CategoryName
                        @Html.CheckBoxFor(item => Model.CategoryList[i].IsSelected)
                    </span>
                }

            </li>
        </ul>

        <div class="FormSection">
            Ingredients
        </div>
        <div id="IngredientsForm">
            @Html.Partial("PartialViews/CreateIngredientList", Model)
        </div>

        <div class="FormSection">
            Directions
        </div>
        <div id="DirectionsForm">
            @Html.Partial("PartialViews/CreateDirectionList", Model)
        </div>

        <hr/>
        <div style="text-align:center;">
            <input id="btnSave" type="button" value="Save" style="width: 60px;" />
            <input id="btnCancel" type="button" value="Cancel" style="margin-left:40px; width:60px;" />
        </div>
</div>

<script language="javascript" type="text/javascript">
    $(document).ready()
    {
        $("[id^=IngredientList][id$=DisplayType]").children("option:contains(Direction)").remove(); //Remove Directions option from Ingredients
        $("[id^=IngredientList][id$=Quantity][value=0]").val(""); //Set zero quantities to blank

        $("[id^=DirectionList][id$=DisplayType]").children("option:contains(Ingredient)").remove();

        $("#btnSave").click(SaveRecipe);
    }

    function SaveRecipe()
    {
        if ($("form").valid()) {
            $("form").submit();
        }
    }

    function Ingredient_AddNew() {
        $.ajax({
            method: "POST",
            cache: false,
            dataType: "HTML",
            url: "/Recipes/Ingredient_Add",
            data: $("form").serialize(),
            success: Ingredient_Render
        });
    }

    function Ingredient_MoveUp(index) {
        $.ajax({
            method: "POST",
            cache: false,
            dataType: "HTML",
            url: "/Recipes/Ingredient_MoveDown",
            data: $("form").serialize() + "&_index=" + index,
            success: Ingredient_Render
        });
    }

    function Ingredient_MoveDown(index) {
        $.ajax({
            method: "POST",
            cache: false,
            dataType: "HTML",
            url: "/Recipes/Ingredient_MoveUp",
            data: $("form").serialize() + "&_index=" + index,
            success: Ingredient_Render
        });
    }

    function Ingredient_Delete(index) {
        $.ajax({
            method: "POST",
            cache: false,
            dataType: "HTML",
            url: "/Recipes/Ingredient_Delete",
            data: $("form").serialize() + "&_index=" + index,
            success: Ingredient_Render
        });
    }

    function Ingredient_Render(data) {
        //Render partial view
        $("#IngredientsForm").html(data);
        //Hide validation, we don't need to see it in this case
        $("[class='input-validation-error']").removeClass("input-validation-error");
        $("[class^='field-validation-error']").html("");
        $("[class^='field-validation-error']").addClass("field-validation-valid");
        $("[class^='field-validation-error']").removeClass("field-validation-error");
        //Update unobtrusive validation to include dynamically added form elements
        var form = $("form");
        form.removeData('validator');
        form.removeData('unobtrusiveValidation');
        $.validator.unobtrusive.parse(form);
    }
</script>
}
